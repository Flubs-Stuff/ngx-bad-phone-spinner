var NgxBadPhoneSpinnerComponent_1;
import * as tslib_1 from "tslib";
import { Component, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { LockOptions } from '../models/lock-options.model';
import { NgxBadPhoneSpinnerOptions } from '../models/ngx-bad-phone-spinner.model';
let NgxBadPhoneSpinnerComponent = NgxBadPhoneSpinnerComponent_1 = class NgxBadPhoneSpinnerComponent {
    constructor() {
        this._propagateChange = () => { };
        this.fullNumber = '0000000000';
        this.digits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        this.locks = [false, false, false, false, false, false, false, false, false, false];
        this.lockIcons = [false, false, false, false, false, false, false, false, false, false];
        this.lockColors = [false, false, false, false, false, false, false, false, false, false];
        this.disabled = false;
        this.isRandomizing = false;
        this.options = new NgxBadPhoneSpinnerOptions();
        this.change = new EventEmitter();
    }
    set number(digits) {
        const candidates = digits.split('');
        for (let i = 0; i < 10; i++) {
            this.digits[i] = typeof candidates[i] !== 'undefined' ? parseInt(candidates[i], 10) : 0;
        }
    }
    writeValue(value) {
        this.fullNumber = value || '0000000000';
    }
    registerOnChange(fn) {
        this._propagateChange = fn;
    }
    registerOnTouched(fn) {
        this._onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    toggleLock(i) {
        let canChange = true;
        if (i !== 0) {
            if (this.options.locks.indexOf(LockOptions.ORDER) !== -1) {
                if (i !== 0) {
                    if (this.locks[i - 1] === false) {
                        canChange = false;
                    }
                }
            }
            if (this.options.unlocks.indexOf(LockOptions.ORDER) !== -1) {
                if (i !== 0) {
                    if (this.locks[i - 1] === true) {
                        canChange = false;
                    }
                }
            }
            if (this.options.locks.indexOf(LockOptions.REVERSE) !== -1) {
                if (i + 1 < this.locks.length) {
                    if (this.locks[i + 1] === false) {
                        canChange = false;
                    }
                }
            }
            if (this.options.unlocks.indexOf(LockOptions.REVERSE) !== -1) {
                if (i + 1 < this.locks.length) {
                    if (this.locks[i + 1] === true) {
                        canChange = false;
                    }
                }
            }
        }
        if (this.options.unlocks.indexOf(LockOptions.IGNORE) !== -1 && Math.random() < 0.5) {
            canChange = false;
        }
        if (this.options.locks.indexOf(LockOptions.IGNORE) !== -1 && Math.random() < 0.5) {
            canChange = false;
        }
        if (canChange) {
            this.locks[i] = !this.locks[i];
            if (this.locks[i]) {
                if (this.options.unlocks.indexOf(LockOptions.RANDOM) !== -1) {
                    setTimeout(() => {
                        this.locks[i] = false;
                    }, Math.random() * 1000 * 60);
                }
            }
            else {
                if (this.options.locks.indexOf(LockOptions.RANDOM) !== -1) {
                    setTimeout(() => {
                        this.locks[i] = true;
                    }, Math.random() * 1000 * 60);
                }
            }
            this.lockColors[i] = this.showLockIcon(i);
            this.lockIcons[i] = this.showLockIcon(i);
            this._onChange();
        }
    }
    randomizeDigit(i, increment) {
        this.isRandomizing = true;
        this.digits[i] = Math.round(Math.random() * 9);
        if (typeof increment === 'undefined') {
            increment = this.options.shufflesPerClick;
            increment--;
        }
        if (increment !== 0) {
            increment--;
            setTimeout(() => {
                this.randomizeDigit(i, increment);
            }, this.options.shuffleMilliseconds);
        }
        else {
            this.isRandomizing = false;
            const shuffleLock = this.options.locks.indexOf(LockOptions.SHUFFLE) !== -1;
            const shuffleUnlock = this.options.unlocks.indexOf(LockOptions.SHUFFLE) !== -1;
            if (shuffleLock || shuffleUnlock) {
                for (let i = 0; i < 10; i++) {
                    if (this.locks[i] === false && shuffleLock) {
                        this.locks[i] = true;
                    }
                    if (this.locks[i] === true && shuffleUnlock) {
                        this.locks[i] = false;
                    }
                    this.lockColors[i] = this.showLockIcon(i);
                    this.lockIcons[i] = this.showLockIcon(i);
                }
            }
        }
    }
    clearLocks() {
        for (let i = 0; i < 10; i++) {
            this.locks[i] = false;
            this.lockColors[i] = this.showLockIcon(i);
            this.lockIcons[i] = this.showLockIcon(i);
        }
    }
    reset() {
        this.clearLocks();
        this.randomize();
    }
    randomize() {
        for (let i = 0; i < 10; i++) {
            if (this.locks[i] === false) {
                this.randomizeDigit(i);
            }
        }
    }
    showLockIcon(i) {
        let showLockIcon = this.locks[i];
        if (this.locks[i] === true && this.options.locks.indexOf(LockOptions.LIAR) !== -1) {
            if (Math.random() < 0.25) {
                showLockIcon = !this.locks[i];
            }
        }
        else if (this.locks[i] === false && this.options.unlocks.indexOf(LockOptions.LIAR) !== -1) {
            if (Math.random() < 0.25) {
                showLockIcon = !this.locks[i];
            }
        }
        return showLockIcon;
    }
    _onChange() {
        this.fullNumber = '';
        for (let i = 0; i < 10; i++) {
            this.fullNumber += '' + this.digits[i];
        }
        this._propagateChange(this.fullNumber);
        this.change.emit(this.fullNumber);
    }
};
tslib_1.__decorate([
    Input()
], NgxBadPhoneSpinnerComponent.prototype, "options", void 0);
tslib_1.__decorate([
    Input()
], NgxBadPhoneSpinnerComponent.prototype, "number", null);
tslib_1.__decorate([
    Output()
], NgxBadPhoneSpinnerComponent.prototype, "change", void 0);
NgxBadPhoneSpinnerComponent = NgxBadPhoneSpinnerComponent_1 = tslib_1.__decorate([
    Component({
        selector: 'ngx-bad-phone-spinner',
        template: "<div class=\"ngx-bad-phone-spinner\">\n  <div class=\"inline-label\">(</div>\n\n  <div class=\"wrapper\"\n       *ngFor=\"let range of [] | range:3; let i = index\">\n    <div>{{ digits[i] }}</div>\n\n    <button type=\"button\"\n            class=\"ripple\"\n            (click)=\"toggleLock(i)\"\n            [disabled]=\"disabled || isRandomizing\"\n            [ngClass]=\"{ 'locked': locks[i], 'unlocked': locks[i] }\">\n      <span *ngIf=\"lockIcons[i] === true\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i] ? 'red' : 'green'\">\n          <path d=\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"/>\n        </svg>\n      </span>\n\n      <span *ngIf=\"lockIcons[i] === false\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i] ? 'red' : 'green'\">\n          <path d=\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"/>\n        </svg>\n      </span>\n    </button>\n  </div>\n\n  <div class=\"inline-label\">)</div>\n\n  <div class=\"wrapper\"\n       *ngFor=\"let range of [] | range:3; let i = index\">\n    <div>{{ digits[i + 3] }}</div>\n\n    <button type=\"button\"\n            class=\"ripple\"\n            (click)=\"toggleLock(i + 3)\"\n            [disabled]=\"disabled || isRandomizing\"\n            [ngClass]=\"{ 'locked': locks[i + 3], 'unlocked': locks[i + 3] }\">\n      <span *ngIf=\"lockIcons[i + 3] === true\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i + 3] ? 'red' : 'green'\">\n          <path d=\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"/>\n        </svg>\n      </span>\n\n      <span *ngIf=\"lockIcons[i + 3] === false\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i + 3] ? 'red' : 'green'\">\n          <path d=\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"/>\n        </svg>\n      </span>\n    </button>\n  </div>\n\n  <div class=\"inline-label\">-</div>\n\n  <div class=\"wrapper\"\n       *ngFor=\"let range of [] | range:4; let i = index\">\n    <div>{{ digits[i + 6] }}</div>\n\n    <button type=\"button\"\n            class=\"ripple\"\n            (click)=\"toggleLock(i + 6)\"\n            [disabled]=\"disabled || isRandomizing\"\n            [ngClass]=\"{ 'locked': locks[i + 6], 'unlocked': locks[i+ 6] }\">\n      <span *ngIf=\"lockIcons[i + 6] === true\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i + 6] ? 'red' : 'green'\">\n          <path d=\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\"/>\n        </svg>\n      </span>\n\n      <span *ngIf=\"lockIcons[i + 6] === false\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-150 -100 700 700\" [attr.fill]=\"lockColors[i + 6] ? 'red' : 'green'\">\n          <path d=\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\"/>\n        </svg>\n      </span>\n    </button>\n  </div>\n\n  <button type=\"button\"\n          class=\"randomize-button ripple\"\n          (click)=\"randomize()\"\n          [disabled]=\"disabled || isRandomizing\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\"></path></svg>\n  </button>\n\n  <button type=\"button\"\n          class=\"randomize-button ripple\"\n          (click)=\"clearLocks()\"\n          [disabled]=\"disabled || isRandomizing\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M512 176.001C512 273.203 433.202 352 336 352c-11.22 0-22.19-1.062-32.827-3.069l-24.012 27.014A23.999 23.999 0 0 1 261.223 384H224v40c0 13.255-10.745 24-24 24h-40v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24v-78.059c0-6.365 2.529-12.47 7.029-16.971l161.802-161.802C163.108 213.814 160 195.271 160 176 160 78.798 238.797.001 335.999 0 433.488-.001 512 78.511 512 176.001zM336 128c0 26.51 21.49 48 48 48s48-21.49 48-48-21.49-48-48-48-48 21.49-48 48z\"/></svg>\n  </button>\n\n  <button type=\"button\"\n          class=\"randomize-button ripple\"\n          (click)=\"reset()\"\n          [disabled]=\"disabled || isRandomizing\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z\"/></svg>\n  </button>\n</div>\n",
        providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => NgxBadPhoneSpinnerComponent_1),
                multi: true
            }
        ],
        styles: ["input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.ngx-bad-phone-spinner{display:flex;width:100%}.ngx-bad-phone-spinner .wrapper{border-top:1px solid rgba(0,0,0,.12);float:left;max-width:50px;padding:1px}.ngx-bad-phone-spinner .wrapper button{padding:.5rem;overflow:hidden;border:0}.ngx-bad-phone-spinner .wrapper button:last-child{border:1px solid rgba(0,0,0,.12);border-radius:0 0 10px 10px;width:100%}.ngx-bad-phone-spinner .wrapper button:focus{outline:0}.ngx-bad-phone-spinner .wrapper button:disabled{cursor:not-allowed}.ngx-bad-phone-spinner .wrapper button:disabled svg{fill:rgba(0,0,0,.26)}.ngx-bad-phone-spinner .wrapper div{align-items:center;border-left:1px solid rgba(0,0,0,.12);border-right:1px solid rgba(0,0,0,.12);padding:.5rem;font-size:1rem;flex:1;min-width:20px;text-align:center;vertical-align:unset}.ngx-bad-phone-spinner .inline-label{float:left;padding-top:0;padding-left:5px;padding-right:5px;font-size:2em}.ngx-bad-phone-spinner .ripple{background-position:center;transition:background .3s}.ngx-bad-phone-spinner .ripple:hover{cursor:pointer;background:radial-gradient(circle,transparent 1%,rgba(0,0,0,.12) 1%) center/15000% rgba(0,0,0,.12)}.ngx-bad-phone-spinner .ripple:active{background-color:rgba(0,0,0,.12);background-size:100%;transition:background}.ngx-bad-phone-spinner .randomize-button{width:45px;border-radius:9px;margin-left:10px;height:37px}"]
    })
], NgxBadPhoneSpinnerComponent);
export { NgxBadPhoneSpinnerComponent };
//# sourceMappingURL=data:application/json;base64,