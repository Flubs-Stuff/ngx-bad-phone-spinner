{"version":3,"sources":["ng://ngx-bad-phone-spinner/lib/ngx-bad-phone-spinner/ngx-bad-phone-spinner.component.ts","ng://ngx-bad-phone-spinner/lib/ngx-bad-phone-spinner.module.ts"],"names":["NgxBadPhoneSpinnerComponent","this","change","EventEmitter","fullNumber","digits","locks","_propagateChange","Object","defineProperty","prototype","candidates","split","i","parseInt","writeValue","value","registerOnChange","fn","registerOnTouched","_onTouched","setDisabledState","isDisabled","disabled","toggleLock","_onChange","randomize","Math","round","random","emit","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Output","Input","NgxBadPhoneSpinnerModule","NgModule","declarations","exports","imports","CommonModule"],"mappings":"2YAAA,IAAAA,EAAA,WAsCE,SAAAA,IApBkBC,KAAAC,OAA+B,IAAIC,EAAAA,aAWrDF,KAAAG,WAAqB,aACrBH,KAAAI,OAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CJ,KAAAK,MAAmB,EAAC,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAInFL,KAAAM,iBAAgB,aA4ClB,OA3DEC,OAAAC,eACIT,EAAAU,UAAA,SAAM,KADV,SACWL,GAGT,QAFMM,EAAaN,EAAOO,MAAM,IAEvBC,EAAI,EAAGA,EAAI,GAAIA,IACtBZ,KAAKI,OAAOQ,GAA8B,oBAAlBF,EAAWE,GAAqBC,SAASH,EAAWE,GAAI,IAAM,mCAe1Fb,EAAAU,UAAAK,WAAA,SAAWC,GACTf,KAAKG,WAAaY,GAAS,cAG7BhB,EAAAU,UAAAO,iBAAA,SAAiBC,GACfjB,KAAKM,iBAAmBW,GAG1BlB,EAAAU,UAAAS,kBAAA,SAAkBD,GAChBjB,KAAKmB,WAAaF,GAGpBlB,EAAAU,UAAAW,iBAAA,SAAkBC,GAChBrB,KAAKsB,SAAWD,GAGlBtB,EAAAU,UAAAc,WAAA,SAAWX,GACTZ,KAAKK,MAAMO,IAAMZ,KAAKK,MAAMO,GAE5BZ,KAAKwB,aAGPzB,EAAAU,UAAAgB,UAAA,WACE,IAAK,IAAIb,EAAI,EAAGA,EAAI,GAAIA,KACA,IAAlBZ,KAAKK,MAAMO,KACbZ,KAAKI,OAAOQ,GAAKc,KAAKC,MAAsB,EAAhBD,KAAKE,YAK/B7B,EAAAU,UAAAe,UAAR,WACExB,KAAKG,WAAa,GAClB,IAAK,IAAIS,EAAI,EAAGA,EAAI,GAAIA,IACtBZ,KAAKG,YAAc,GAAKH,KAAKI,OAAOQ,GAGtCZ,KAAKM,iBAAiBN,KAAKG,YAC3BH,KAAKC,OAAO4B,KAAK7B,KAAKG,iCA1EzB2B,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAW,wBACXC,SAAA,kzXAIAC,UAAW,CACT,CACEC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAU,WAAO,OAAAvC,IAC9BwC,OAAO,09CAKVC,EAAAA,OAAMT,KAAA,CAAC,0BAEPU,EAAAA,MAAKV,KAAA,CAAC,aA2DThC,EA/EA,GCAA2C,EAAA,WAMA,SAAAA,KAWwC,2BAXvCC,EAAAA,SAAQZ,KAAA,CAAC,CACRa,aAAc,CACZ7C,GAEF8C,QAAS,CACP9C,GAEF+C,QAAS,CACPC,EAAAA,kBAGoCL,EAjBxC","sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:  'ngx-bad-phone-spinner',\n  templateUrl: './ngx-bad-phone-spinner.component.html',\n  styleUrls: [\n    './ngx-bad-phone-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxBadPhoneSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxBadPhoneSpinnerComponent implements ControlValueAccessor {\n  @Output('change') change: EventEmitter<string> = new EventEmitter();\n\n  @Input('number')\n  set number(digits: string) {\n    const candidates = digits.split('');\n\n    for (let i = 0; i < 10; i++) {\n      this.digits[i] = typeof candidates[i] !== 'undefined' ? parseInt(candidates[i], 10) : 0;\n    }\n  }\n\n  fullNumber: string = '0000000000';\n  digits: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  locks: boolean[] = [false, false, false, false, false, false, false, false, false, false];\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value: string): void {\n    this.fullNumber = value || '0000000000';\n  }\n\n  registerOnChange(fn: any): void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  toggleLock(i:number):void {\n    this.locks[i] = !this.locks[i];\n\n    this._onChange();\n  }\n\n  randomize():void {\n    for (let i = 0; i < 10; i++) {\n      if (this.locks[i] === false) {\n        this.digits[i] = Math.round(Math.random() * 9);\n      }\n    }\n  }\n\n  private _onChange():void {\n    this.fullNumber = '';\n    for (let i = 0; i < 10; i++) {\n      this.fullNumber += '' + this.digits[i];\n    }\n\n    this._propagateChange(this.fullNumber);\n    this.change.emit(this.fullNumber);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxBadPhoneSpinnerComponent } from './ngx-bad-phone-spinner/ngx-bad-phone-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxBadPhoneSpinnerComponent\n  ],\n  exports: [\n    NgxBadPhoneSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxBadPhoneSpinnerModule { }\n"]}