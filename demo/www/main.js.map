{"version":3,"sources":["webpack:///../dist/ngx-bad-phone-spinner/fesm5/ngx-bad-phone-spinner.js","webpack:///../node_modules/@angular/core/fesm5 lazy namespace object","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAC0C;AAC9C;;AAE/C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qJAAqJ,aAAa,qIAAqI,2CAA2C,05BAA05B,aAAa,qIAAqI,2CAA2C,05BAA05B,aAAa,qIAAqI,2CAA2C,m8BAAm8B,aAAa,qIAAqI,2CAA2C,05BAA05B,aAAa,qIAAqI,2CAA2C,05BAA05B,aAAa,qIAAqI,2CAA2C,m8BA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","file":"main.js","sourcesContent":["import { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Component, Input, EventEmitter, Output, forwardRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-bad-phone-spinner/ngx-bad-phone-spinner.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxBadPhoneSpinnerComponent = /** @class */ (function () {\n    function NgxBadPhoneSpinnerComponent() {\n        this.change = new EventEmitter();\n        this.fullNumber = '0000000000';\n        this.digits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this.locks = [false, false, false, false, false, false, false, false, false, false];\n        this._propagateChange = (/**\n         * @return {?}\n         */\n        function () { });\n    }\n    Object.defineProperty(NgxBadPhoneSpinnerComponent.prototype, \"number\", {\n        set: /**\n         * @param {?} digits\n         * @return {?}\n         */\n        function (digits) {\n            /** @type {?} */\n            var candidates = digits.split('');\n            for (var i = 0; i < 10; i++) {\n                this.digits[i] = typeof candidates[i] !== 'undefined' ? parseInt(candidates[i], 10) : 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.fullNumber = value || '0000000000';\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._propagateChange = fn;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.setDisabledState = /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    /**\n     * @param {?} i\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.toggleLock = /**\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        this.locks[i] = !this.locks[i];\n        this._onChange();\n    };\n    /**\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype.randomize = /**\n     * @return {?}\n     */\n    function () {\n        for (var i = 0; i < 10; i++) {\n            if (this.locks[i] === false) {\n                this.digits[i] = Math.round(Math.random() * 9);\n            }\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    NgxBadPhoneSpinnerComponent.prototype._onChange = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.fullNumber = '';\n        for (var i = 0; i < 10; i++) {\n            this.fullNumber += '' + this.digits[i];\n        }\n        this._propagateChange(this.fullNumber);\n        this.change.emit(this.fullNumber);\n    };\n    NgxBadPhoneSpinnerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ngx-bad-phone-spinner',\n                    template: \"<div class=\\\"ngx-bad-phone-spinner\\\">\\n  <div class=\\\"inline-label\\\">(</div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[0] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(0)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[0], 'unlocked': locks[0] }\\\">\\n      <span *ngIf=\\\"locks[0] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[0] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[1] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(1)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[1], 'unlocked': locks[1] }\\\">\\n      <span *ngIf=\\\"locks[1] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[1] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[2] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(2)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[2], 'unlocked': locks[2] }\\\">\\n      <span *ngIf=\\\"locks[2] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[2] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"inline-label\\\">)</div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[3] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(3)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[3], 'unlocked': locks[3] }\\\">\\n      <span *ngIf=\\\"locks[3] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[3] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[4] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(4)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[4], 'unlocked': locks[4] }\\\">\\n      <span *ngIf=\\\"locks[4] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[4] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[5] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(5)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[5], 'unlocked': locks[5] }\\\">\\n      <span *ngIf=\\\"locks[5] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[5] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"inline-label\\\">-</div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[6] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(6)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[6], 'unlocked': locks[6] }\\\">\\n      <span *ngIf=\\\"locks[6] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[6] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[7] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(7)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[7], 'unlocked': locks[7] }\\\">\\n      <span *ngIf=\\\"locks[7] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[7] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[8] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(8)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[8], 'unlocked': locks[8] }\\\">\\n      <span *ngIf=\\\"locks[8] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[8] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n  <div class=\\\"wrapper\\\">\\n    <div>{{ digits[9] }}</div>\\n\\n    <button type=\\\"button\\\"\\n            class=\\\"ripple\\\"\\n            (click)=\\\"toggleLock(9)\\\"\\n            [ngClass]=\\\"{ 'locked': locks[9], 'unlocked': locks[9] }\\\">\\n      <span *ngIf=\\\"locks[9] === true\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z\\\"/>\\n        </svg>\\n      </span>\\n\\n      <span *ngIf=\\\"locks[9] === false\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"-150 -100 700 700\\\">\\n          <path d=\\\"M400 256H152V152.9c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v16c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-16C376 68 307.5-.3 223.5 0 139.5.3 72 69.5 72 153.5V256H48c-26.5 0-48 21.5-48 48v160c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V304c0-26.5-21.5-48-48-48z\\\"/>\\n        </svg>\\n      </span>\\n    </button>\\n  </div>\\n\\n\\n  <button type=\\\"button\\\"\\n          class=\\\"randomize-button ripple\\\"\\n          (click)=\\\"randomize()\\\">\\n    <svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" data-prefix=\\\"fas\\\" data-icon=\\\"random\\\" class=\\\"svg-inline--fa fa-random fa-w-16\\\" role=\\\"img\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 512 512\\\"><path fill=\\\"currentColor\\\" d=\\\"M504.971 359.029c9.373 9.373 9.373 24.569 0 33.941l-80 79.984c-15.01 15.01-40.971 4.49-40.971-16.971V416h-58.785a12.004 12.004 0 0 1-8.773-3.812l-70.556-75.596 53.333-57.143L352 336h32v-39.981c0-21.438 25.943-31.998 40.971-16.971l80 79.981zM12 176h84l52.781 56.551 53.333-57.143-70.556-75.596A11.999 11.999 0 0 0 122.785 96H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12zm372 0v39.984c0 21.46 25.961 31.98 40.971 16.971l80-79.984c9.373-9.373 9.373-24.569 0-33.941l-80-79.981C409.943 24.021 384 34.582 384 56.019V96h-58.785a12.004 12.004 0 0 0-8.773 3.812L96 336H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h110.785c3.326 0 6.503-1.381 8.773-3.812L352 176h32z\\\"></path></svg>\\n  </button>\\n</div>\\n\",\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef((/**\n                             * @return {?}\n                             */\n                            function () { return NgxBadPhoneSpinnerComponent; })),\n                            multi: true\n                        }\n                    ],\n                    styles: [\"input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.ngx-bad-phone-spinner .wrapper{border-top:1px solid rgba(0,0,0,.12);float:left;max-width:50px;padding:1px}.ngx-bad-phone-spinner .wrapper button{padding:.5rem;overflow:hidden;border:0}.ngx-bad-phone-spinner .wrapper button:last-child{border:1px solid rgba(0,0,0,.12);border-radius:0 0 10px 10px;width:100%}.ngx-bad-phone-spinner .wrapper button:focus{outline:0}.ngx-bad-phone-spinner .wrapper button:disabled{cursor:not-allowed}.ngx-bad-phone-spinner .wrapper button:disabled svg{fill:rgba(0,0,0,.26)}.ngx-bad-phone-spinner .wrapper div{align-items:center;border-left:1px solid rgba(0,0,0,.12);border-right:1px solid rgba(0,0,0,.12);padding:.5rem;font-size:1rem;flex:1;min-width:30px;text-align:center;vertical-align:unset}.ngx-bad-phone-spinner .inline-label{float:left;padding-top:0;padding-left:5px;padding-right:5px;font-size:2em}.ngx-bad-phone-spinner .ripple{background-position:center;transition:background .3s}.ngx-bad-phone-spinner .ripple:hover{cursor:pointer;background:radial-gradient(circle,transparent 1%,rgba(0,0,0,.12) 1%) center/15000% rgba(0,0,0,.12)}.ngx-bad-phone-spinner .ripple:active{background-color:rgba(0,0,0,.12);background-size:100%;transition:background}.ngx-bad-phone-spinner .randomize-button{width:50px;border-radius:9px;margin-left:10px;height:37px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    NgxBadPhoneSpinnerComponent.ctorParameters = function () { return []; };\n    NgxBadPhoneSpinnerComponent.propDecorators = {\n        change: [{ type: Output, args: ['change',] }],\n        number: [{ type: Input, args: ['number',] }]\n    };\n    return NgxBadPhoneSpinnerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-bad-phone-spinner.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgxBadPhoneSpinnerModule = /** @class */ (function () {\n    function NgxBadPhoneSpinnerModule() {\n    }\n    NgxBadPhoneSpinnerModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        NgxBadPhoneSpinnerComponent\n                    ],\n                    exports: [\n                        NgxBadPhoneSpinnerComponent\n                    ],\n                    imports: [\n                        CommonModule\n                    ]\n                },] }\n    ];\n    return NgxBadPhoneSpinnerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-bad-phone-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgxBadPhoneSpinnerComponent, NgxBadPhoneSpinnerModule };\n\n//# sourceMappingURL=ngx-bad-phone-spinner.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../node_modules/@angular/core/fesm5 lazy recursive\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>ngx-bad-phone-spinner</h1>\\n\\n<h4 style=\\\"margin-left: 10px;\\\">\\n  Enter your phone number:\\n</h4>\\n\\n<ngx-bad-phone-spinner\\n    [number]=\\\"value\\\"\\n    (change)=\\\"change($event)\\\">\\n</ngx-bad-phone-spinner>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    title = 'mat-increments';\n\n    form: FormGroup;\n    value: string = '2055550786';\n\n    constructor(private fb: FormBuilder) {\n        this.form = this.fb.group({\n            price: 11\n        });\n    }\n\n    submit() {\n        alert(JSON.stringify(this.form.value));\n    }\n\n    change(value: string) {\n        this.value = value;\n    }\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxBadPhoneSpinnerModule } from 'ngx-bad-phone-spinner';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    NgxBadPhoneSpinnerModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}