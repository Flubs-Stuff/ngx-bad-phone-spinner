{"version":3,"file":"ngx-bad-phone-spinner.umd.js.map","sources":["ng://ngx-bad-phone-spinner/lib/ngx-bad-phone-spinner/ngx-bad-phone-spinner.component.ts","ng://ngx-bad-phone-spinner/lib/ngx-bad-phone-spinner.module.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:  'ngx-bad-phone-spinner',\n  templateUrl: './ngx-bad-phone-spinner.component.html',\n  styleUrls: [\n    './ngx-bad-phone-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxBadPhoneSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxBadPhoneSpinnerComponent implements ControlValueAccessor {\n  @Output('change') change: EventEmitter<string> = new EventEmitter();\n\n  @Input('number')\n  set number(digits: string) {\n    const candidates = digits.split('');\n\n    for (let i = 0; i < 10; i++) {\n      this.digits[i] = typeof candidates[i] !== 'undefined' ? parseInt(candidates[i], 10) : 0;\n    }\n  }\n\n  fullNumber: string = '0000000000';\n  digits: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  locks: boolean[] = [false, false, false, false, false, false, false, false, false, false];\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value: string): void {\n    this.fullNumber = value || '0000000000';\n  }\n\n  registerOnChange(fn: any): void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  toggleLock(i:number):void {\n    this.locks[i] = !this.locks[i];\n\n    this._onChange();\n  }\n\n  randomize():void {\n    for (let i = 0; i < 10; i++) {\n      if (this.locks[i] === false) {\n        this.digits[i] = Math.round(Math.random() * 9);\n      }\n    }\n  }\n\n  private _onChange():void {\n    this.fullNumber = '';\n    for (let i = 0; i < 10; i++) {\n      this.fullNumber += '' + this.digits[i];\n    }\n\n    this._propagateChange(this.fullNumber);\n    this.change.emit(this.fullNumber);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxBadPhoneSpinnerComponent } from './ngx-bad-phone-spinner/ngx-bad-phone-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxBadPhoneSpinnerComponent\n  ],\n  exports: [\n    NgxBadPhoneSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxBadPhoneSpinnerModule { }\n"],"names":["EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","Output","Input","NgModule","CommonModule"],"mappings":"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"}
